{"version":3,"file":"main.64d1048cc34e337ef83c.bundle.js","sources":["webpack:///./src/TextField.tsx"],"sourcesContent":["import * as React from 'react';\nimport MuiTextField, {\n  TextFieldProps as MuiTextFieldProps,\n} from '@material-ui/core/TextField';\nimport { FieldProps, getIn } from 'formik';\n\n// Special omit for TextField - https://github.com/microsoft/TypeScript/issues/28791\nexport type AllKeys<T> = T extends T ? keyof T : never;\nexport type Omit<T, K extends AllKeys<T>> = T extends T\n  ? Pick<T, Exclude<keyof T, K>>\n  : never;\n\nexport type TextFieldProps = FieldProps &\n  Omit<MuiTextFieldProps, 'error' | 'name' | 'onChange' | 'value'>;\n\nexport const fieldToTextField = ({\n  field,\n  form,\n  disabled = false,\n  ...props\n}: TextFieldProps): MuiTextFieldProps => {\n  const { name } = field;\n  const { touched, errors, isSubmitting } = form;\n\n  const fieldError = getIn(errors, name);\n  const showError = getIn(touched, name) && !!fieldError;\n\n  return {\n    ...props,\n    ...field,\n    error: showError,\n    helperText: showError ? fieldError : props.helperText,\n    disabled: isSubmitting || disabled,\n  };\n};\n\nexport const TextField: React.ComponentType<TextFieldProps> = ({\n  children,\n  ...props\n}: TextFieldProps) => (\n  <MuiTextField {...fieldToTextField(props)} children={children} />\n);\n\nTextField.displayName = 'FormikMaterialUITextField';\n"],"mappings":"AAoCA","sourceRoot":""}